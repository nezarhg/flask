# نظام E-deal لإدارة علاقات العملاء

![E-deal Logo](frontend/public/logo.png)

## نبذة عن المشروع

نظام E-deal هو نظام متكامل لإدارة علاقات العملاء (CRM) تم تطويره خصيصًا لإدارة بيانات المنشآت والتواصل معها بشكل فعال. يوفر النظام مجموعة شاملة من الأدوات لإدارة بيانات العملاء، وتنفيذ حملات التسويق، وتحليل البيانات، والتكامل مع أنظمة الأتمتة الخارجية.

## الميزات الرئيسية

- **إدارة المستخدمين والصلاحيات**: نظام متكامل للمصادقة وإدارة صلاحيات المستخدمين
- **إدارة المنشآت**: تخزين وإدارة بيانات المنشآت بشكل منظم
- **نظام تسويق متكامل**: إنشاء وإدارة حملات تسويقية عبر البريد الإلكتروني والواتساب ومواقع التواصل الاجتماعي
- **الإحصائيات والتقارير**: تحليل البيانات وعرض تقارير إحصائية متقدمة
- **واجهات برمجة التطبيقات (API)**: التكامل مع أنظمة الأتمتة مثل n8n وZapier وMake
- **مساعد الذكاء الاصطناعي**: توفير إرشادات ومساعدة للمستخدمين باستخدام الذكاء الاصطناعي
- **استيراد وتصدير البيانات**: دعم استيراد وتصدير البيانات من وإلى ملفات Excel وCSV
- **لوحة تحكم المسؤول**: واجهة إدارية شاملة للمسؤولين

## المتطلبات التقنية

### متطلبات الخادم
- Python 3.8 أو أحدث
- Node.js 14 أو أحدث
- قاعدة بيانات: SQLite (للبيئات الصغيرة) أو PostgreSQL/MySQL (للبيئات الإنتاجية)

### متطلبات العميل
- متصفح حديث يدعم HTML5 و CSS3 و JavaScript (Chrome، Firefox، Safari، Edge)
- اتصال بالإنترنت

## البنية التقنية

### الواجهة الخلفية (Backend)
- إطار العمل: Flask (Python)
- قاعدة البيانات: SQLAlchemy ORM
- المصادقة: JWT (JSON Web Tokens)
- معالجة البيانات: Pandas

### الواجهة الأمامية (Frontend)
- إطار العمل: React.js
- تصميم واجهة المستخدم: Bootstrap
- إدارة الحالة: React Context API
- الرسوم البيانية: Chart.js

## التثبيت والإعداد

### 1. استنساخ المستودع

```bash
git clone https://github.com/your-organization/edeal-crm.git
cd edeal-crm
```

### 2. إعداد الواجهة الخلفية

```bash
# إنشاء بيئة افتراضية لـ Python
python3 -m venv venv
source venv/bin/activate  # على Linux/Mac
# أو
venv\Scripts\activate  # على Windows

# تثبيت المتطلبات
pip install -r requirements.txt

# إعداد متغيرات البيئة
cp .env.example .env
# قم بتعديل ملف .env حسب إعدادات بيئتك
```

### 3. إعداد الواجهة الأمامية

```bash
cd frontend
npm install
```

### 4. تهيئة قاعدة البيانات

```bash
cd ..
python3 -c "from backend import create_app, db; app = create_app(); app.app_context().push(); db.create_all()"
```

### 5. إنشاء مستخدم المسؤول الأول

```bash
python3 create_admin.py
```

### 6. تشغيل التطبيق للتطوير

```bash
# تشغيل الواجهة الخلفية
python3 app.py

# في نافذة طرفية أخرى، قم بتشغيل الواجهة الأمامية
cd frontend
npm start
```

## الاستخدام

1. افتح المتصفح وانتقل إلى `http://localhost:3000`
2. قم بتسجيل الدخول باستخدام بيانات اعتماد المسؤول التي أنشأتها
3. استكشف لوحة التحكم واستخدم الميزات المختلفة للنظام

## النشر على بيئة الإنتاج

للحصول على تعليمات مفصلة حول نشر النظام على بيئة الإنتاج، يرجى الرجوع إلى [دليل النشر](deployment_guide.md).

## الوثائق

- [دليل المستخدم](docs/user_guide.md): دليل شامل لاستخدام النظام
- [دليل المطور](docs/developer_guide.md): معلومات تقنية للمطورين
- [توثيق API](docs/api_documentation.md): توثيق واجهات برمجة التطبيقات